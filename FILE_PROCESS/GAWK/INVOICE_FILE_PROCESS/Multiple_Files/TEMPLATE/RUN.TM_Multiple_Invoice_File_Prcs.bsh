#!/bin/bash

#################################################################################################
#                                                                                                                                                                                                                                                                                           ##
#  Job:           RUN.TM_Prcs_Files_in_Dir.bsh
#
#  Location:      /home/tede/n55115/Joblib/Utils/file_processing/FILES_IN_DIR_PROCESS/TEMPLATE
#  
#  Description:   -  TEMPLATE wrapper script.
#                 -  Calls TM_Prcs_Files_in_Dir.bsh which:
#                    Process all files in directory recursively or not.
#  
#################################################################################################
#
#  Usage:         RUN.TM_Prcs_Files_in_Dir  <dir>  <rcrs>
#
#  Parameters:    <dir>    : Input directory.
#                 <rcrs>   : Flag for recursive process or not.
#                            Valid values: r or n respectively.
#
#  
#  Calls:         TM_Prcs_Files_in_Dir.bsh  <dir>  <rcrs>
#
#  Parameters:    As above.
#
#
#  Globals:       RCRS_YES = "r"
#                 RCRS_NOT = "n"
#
#################################################################################################
#
#  Function:      -  Check for supplied parameters.
#                 -  Call TM_Prcs_Files_in_Dir.bsh  <dir>  <rcrs>
#
#  Output:        -  Output files in directory where job is runed.
#                 -  Logs (outlist/errlist) in directory where job is runed.
#
#################################################################################################

# Environment variables.
# --> in .profile
source $HOME"/.profile"

# Parameters.
#
# DD_files.
declare        DIR_IN
#
declare        p_rcrs
#

# Constants.
readonly       ARGS_NBR=2
readonly       JOB_RUN="./TM_Multiple_Invoice_File_Prcs.bsh"
#
readonly       THIS_JOB_FULL=$0
readonly       THIS_JOB_SMPL=${0##*/}
declare -r -x  JOB_OUT=$THIS_JOB_SMPL".outlist"
declare -r -x  JOB_ERR=$THIS_JOB_SMPL".errlist"
#
# Globals exported.
declare -r -x  RCRS_YES="r"
declare -r -x  RCRS_NOT="n"
#

# Variables.
#

# Functions.
function chk_abnd_silent()
{
	# Checks return value of command.
	# Called as:   chk_abnd_silent $?
	# Notes:       Silent, does not print.
	
  local     abnd
  
  abnd=$1
  
  if [ $abnd -ne 0 ]; then
    echo "Failed with status " $abnd; echo
    sleep 1s
    touch $JOB_OUT $JOB_ERR
    exit $abnd
  fi
  
  return 0
}

function chk_abnd()
{
	# Checks return value of command.
	# Called as:   chk_abnd_silent $?
	
  local     abnd
  
  abnd=$1
  date
  
  if [ $abnd -ne 0 ]; then
    echo "Failed with status " $abnd; echo
    sleep 1s
    touch $JOB_OUT $JOB_ERR
    exit $abnd
  else
    echo "Done"; echo
  fi
}

function house_keep()
{
   # Check number of command line parameters passed to script.
   # Parse parameters.
   #     Assign them to variables.
   # Called as: house_keep $# $1 $2 ...

  local     argc
  
  argc=$1
  chk_abnd_silent $? # Check return status.
  
  # If number of arguments is incorrect.
  if [ $argc -ne $ARGS_NBR ]; then
      echo "Wrong number of parameters = " $argc
      echo "Must be = " $ARGS_NBR
      echo "Usage: " $THIS_JOB_SMPL " <DIR_IN> r|n"
      exit 69
  fi
  
  # Fill variables.
  DIR_IN=$2
  p_rcrs=$3
  
  chk_abnd_silent $? # Check return status.
  
  # Check valid values for p_rcrs.
  if [ $p_rcrs != $RCRS_YES ] && [ $p_rcrs != $RCRS_NOT ]; then
     echo "Illegal 2nd parameter = " $p_rcrs ' . Must be: ' $RCRS_YES ' or ' $RCRS_NOT ' .'
     exit 68
  fi
  
  return 0
}
#

############################################################################
# Script start.
#
echo; echo $THIS_JOB_FULL " Started at ""$(date +"%Y-%m-%d %H:%M:%S::%N")"; echo
echo $THIS_JOB_FULL " Started at ""$(date +"%Y-%m-%d %H:%M:%S::%N")" > $JOB_OUT; echo >> $JOB_OUT

# Check arguments and construct file names.
house_keep $# $1 $2
chk_abnd_silent $? # Check return status.
#

############################################################################
#  Run job.
#
date
echo "Submit Job     " $JOB_RUN " ..."
echo "outlist_name = " $JOB_OUT
echo "errlist_name = " $JOB_ERR
echo
echo "DIR_IN = @"$DIR_IN"@"
echo "p_rcrs = @"$p_rcrs"@"
echo
#
date >> $JOB_OUT
echo "Submit Job     " $JOB_RUN " ..." >> $JOB_OUT
echo "outlist_name = " $JOB_OUT        >> $JOB_OUT
echo "errlist_name = " $JOB_ERR        >> $JOB_OUT
echo >> $JOB_OUT
echo "DIR_IN = @"$DIR_IN"@"   >> $JOB_OUT
echo "p_rcrs = @"$p_rcrs"@"   >> $JOB_OUT
echo >> $JOB_OUT

# Run Job.
$JOB_RUN  $DIR_IN  $p_rcrs  1>>$JOB_OUT  2>$JOB_ERR
# Check return status.
chk_abnd $?
#

############################################################################
# Script end.
#
echo; echo >> $JOB_OUT; 
echo $THIS_JOB_FULL " Ended at   ""$(date +"%Y-%m-%d %H:%M:%S::%N")"; echo
echo $THIS_JOB_FULL " Ended at   ""$(date +"%Y-%m-%d %H:%M:%S::%N")" >> $JOB_OUT
chk_abnd $? # Check return status.

sleep 1s
touch $JOB_OUT $JOB_ERR
chk_abnd_silent $? # Check return status.
#

exit $?
#
